" -------------------- Plugins --------------------

let with_plugins = 1
let data_dir = '~/.vim'
let vimplug_path = data_dir . '/autoload/plug.vim'
let vimplug_gh_path = 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
let vimplug_load_command = '!curl -fLo ' .vimplug_path. ' --create-dirs ' . vimplug_gh_path

if with_plugins
  if empty(glob(vimplug_path))
    silent execute vimplug_load_command
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
  endif

  call plug#begin()
  Plug 'neoclide/coc.nvim', { 'branch': 'release' }
  Plug 'airblade/vim-gitgutter'
  call plug#end()
endif

" -------------------- Right columns --------------------

set number

" -------------------- Options --------------------

syntax on
set nocompatible
set nowrap
set history=100
set laststatus=0

" -------------------- Backup files -------------------

set nobackup
set noswapfile
set nowritebackup
set updatetime=100

" -------------------- Indentation --------------------

set autoindent
set expandtab
set smarttab
set smartindent

set tabstop=2
set softtabstop=2
set shiftwidth=2

" -------------------- Cursor as line in INSERT mode --------------------

let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

" -------------------- Spaces and Tabs --------------------

" Mark trailing spaces as error
match Visual '\s\+$'

" -------------------- Search --------------------

set hlsearch
set incsearch
set wrapscan

" -------------------- Colorscheme --------------------

if has('termguicolors')
  set termguicolors
endif

set background=dark
colorscheme torte " habamax if eyes are bad =(

" Transparent bg. Comment string below to disable
hi Normal guibg=NONE ctermbg=NONE

" -------------------- Plugins Setup --------------------

function! CheckBackspace() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1] =~# '\s'
endfunction

function! ShowDocumentation()
  if CocAction('hasProvider', 'hover')
    call CocActionAsync('doHover')
  else
    call feedkeys('K', 'in')
  endif
endfunction

if with_plugins
  set signcolumn=yes

  " Coc Setup
  " Need to do :CocInstall @yaegassy/coc-volar @yaegassy/coc-tailwindcss3 coc-pyright coc-go coc-json coc-tsserver coc-eslint coc-prettier coc-css
  inoremap <silent><expr> <TAB> coc#pum#visible() ? coc#pum#next(1) : CheckBackspace() ? "\<Tab>" : coc#refresh()
  inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"
  nmap <silent> gd <Plug>(coc-definition)
  nmap <silent> gy <Plug>(coc-type-definition)
  nmap <silent> gi <Plug>(coc-implementation)
  nmap <silent> gr <Plug>(coc-references)
  command! -nargs=0 Format :call CocActionAsync('format')
  autocmd CursorHold * silent call CocActionAsync('highlight')


  " Use K to show documentation in preview window
  nnoremap <silent> K :call ShowDocumentation()<CR>



endif
